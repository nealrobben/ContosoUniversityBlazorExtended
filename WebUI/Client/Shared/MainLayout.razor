@using Client.Settings
@inherits LayoutComponentBase
@inject ClientSettingService ClientSettingService
@inject IStringLocalizer<MainLayout> Localizer

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="25">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Contoso University
        <MudSpacer />
        <CultureSelector />
        <MudTooltip Text="@Localizer["ToggleDarkMode"]">
            <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => ToggleDarkMode())" />
        </MudTooltip>
    </MudAppBar>
    <MudDrawer Variant="@DrawerVariant.Mini" ClipMode="@DrawerClipMode.Always" @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
bool _drawerOpen = true;
MudTheme _currentTheme;

protected override async Task OnInitializedAsync()
{
    _currentTheme = await ClientSettingService.GetCurrentThemeAsync();
}

void DrawerToggle()
{
    _drawerOpen = !_drawerOpen;
}

private async Task ToggleDarkMode()
{
    bool isDarkMode = await ClientSettingService.ToggleDarkModeAsync();
    _currentTheme = isDarkMode
        ? Themes.DefaultTheme: Themes.DarkTheme;
}
}